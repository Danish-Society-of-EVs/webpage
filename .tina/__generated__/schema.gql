# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

type SystemInfo {
  filename: String!
  title: String
  basename: String!
  breadcrumbs(excludeExtension: Boolean): [String!]!
  path: String!
  relativePath: String!
  extension: String!
  template: String!
  collection: Collection!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String!
  endCursor: String!
}

""""""
interface Node {
  id: ID!
}

""""""
interface Document {
  id: ID!
  _sys: SystemInfo
  _values: JSON!
}

"""A relay-compliant pagination connection"""
interface Connection {
  totalCount: Float!
  pageInfo: PageInfo!
}

type Query {
  getOptimizedQuery(queryString: String!): String
  collection(collection: String): Collection!
  collections: [Collection!]!
  node(id: String): Node!
  document(collection: String, relativePath: String): DocumentNode!
  news(relativePath: String): News!
  newsConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: NewsFilter): NewsConnection!
  featured_articles(relativePath: String): Featured_articles!
  featured_articlesConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: Featured_articlesFilter): Featured_articlesConnection!
  ev_groups_in_denmark(relativePath: String): Ev_groups_in_denmark!
  ev_groups_in_denmarkConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: Ev_groups_in_denmarkFilter): Ev_groups_in_denmarkConnection!
}

input DocumentFilter {
  news: NewsFilter
  featured_articles: Featured_articlesFilter
  ev_groups_in_denmark: Ev_groups_in_denmarkFilter
}

type DocumentConnectionEdges {
  cursor: String!
  node: DocumentNode
}

type DocumentConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [DocumentConnectionEdges]
}

type Collection {
  name: String!
  slug: String!
  label: String
  path: String!
  format: String
  matches: String
  templates: [JSON]
  fields: [JSON]
  documents(before: String, after: String, first: Float, last: Float, sort: String, filter: DocumentFilter): DocumentConnection!
}

union DocumentNode = News | Featured_articles | Ev_groups_in_denmark

type News implements Node & Document {
  body: JSON
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input RichTextFilter {
  startsWith: String
  eq: String
  exists: Boolean
}

input NewsFilter {
  body: RichTextFilter
}

type NewsConnectionEdges {
  cursor: String!
  node: News
}

type NewsConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [NewsConnectionEdges]
}

type Featured_articles implements Node & Document {
  body: JSON
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input Featured_articlesFilter {
  body: RichTextFilter
}

type Featured_articlesConnectionEdges {
  cursor: String!
  node: Featured_articles
}

type Featured_articlesConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [Featured_articlesConnectionEdges]
}

type Ev_groups_in_denmark implements Node & Document {
  body: JSON
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input Ev_groups_in_denmarkFilter {
  body: RichTextFilter
}

type Ev_groups_in_denmarkConnectionEdges {
  cursor: String!
  node: Ev_groups_in_denmark
}

type Ev_groups_in_denmarkConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [Ev_groups_in_denmarkConnectionEdges]
}

type Mutation {
  addPendingDocument(collection: String!, relativePath: String!, template: String): DocumentNode!
  updateDocument(collection: String, relativePath: String!, params: DocumentUpdateMutation!): DocumentNode!
  deleteDocument(collection: String, relativePath: String!): DocumentNode!
  createDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  updateNews(relativePath: String!, params: NewsMutation!): News!
  createNews(relativePath: String!, params: NewsMutation!): News!
  updateFeatured_articles(relativePath: String!, params: Featured_articlesMutation!): Featured_articles!
  createFeatured_articles(relativePath: String!, params: Featured_articlesMutation!): Featured_articles!
  updateEv_groups_in_denmark(relativePath: String!, params: Ev_groups_in_denmarkMutation!): Ev_groups_in_denmark!
  createEv_groups_in_denmark(relativePath: String!, params: Ev_groups_in_denmarkMutation!): Ev_groups_in_denmark!
}

input DocumentUpdateMutation {
  news: NewsMutation
  featured_articles: Featured_articlesMutation
  ev_groups_in_denmark: Ev_groups_in_denmarkMutation
  relativePath: String
}

input DocumentMutation {
  news: NewsMutation
  featured_articles: Featured_articlesMutation
  ev_groups_in_denmark: Ev_groups_in_denmarkMutation
}

input NewsMutation {
  body: JSON
}

input Featured_articlesMutation {
  body: JSON
}

input Ev_groups_in_denmarkMutation {
  body: JSON
}

schema {
  query: Query
  mutation: Mutation
}
  