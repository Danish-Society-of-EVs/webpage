---
title: Front page
layout: base.njk
---

<!-- Top section -->
<div>{% include "src/_includes/home_top.njk" %}</div>

<!-- Text section -->
<div class="max-w-3xl pt-2 flex mx-auto p-4">
    <div class="flex flex-col space-y-2">
        <p class="text-4xl text-center">Who are we?</p>
        <p>The Danish Society for Extracellular Vesicles (DSEV) is a Danish community of extracellular vesicles-, exosomes-, and microvesicle researchers. The objective of DSEV is to promote the interests of Danish scientists nationally and internationally.</p>
        <p>As an organization, DSEV connects researchers at its Annual Meeting and reach out to global EV researcheres and workshops/events</p>
        <p>If you are a researcher interested in learning more about extracellular vesicle, please consider joining DSEV.</p>
    </div>
</div>

<!-- News and mailing list -->
<div class="relative sm:h-52 overflow-hidden">
    <!-- Main container -->
    <div id="Container" class="max-w-3xl mx-auto overflow-hidden h-full">
        <!-- background -->
        <div class="hidden sm:block absolute bg-gray-200 h-full w-1/2 left-0"></div>
        <div class="hidden sm:block absolute bg-gray-300 h-full w-1/2 right-0"></div>

        <!-- Content -->
        <div class="relative flex flex-col sm:flex-row sm:h-full w-full">
            <!-- Newsfeed -->
            <div class="flex flex-col h-64 sm:w-2/3 sm:h-full bg-gray-200 p-4 space-y-4">
                <h3 class="text-2xl font-montserrat">Latest news</h3>
                <div></div>
                <button>News Archive</button>
            </div>

            <!-- Mailing list -->
            <div class="flex flex-col h-52 sm:w-1/3 sm:h-full bg-gray-300 p-4 space-y-2">
                <h3 class="text-2xl font-montserrat">Mailing list</h3>
                {% include "src/_includes/mailing_list.njk" %}
            </div>
        </div>
    </div>
</div>

<!-- Spacer -->
<div class="h-10"></div>

<!-- Article wheel -->
<div>
    <div>
        <div class="relative h-80 overflow-hidden">
            <!-- background -->
            <div class="absolute bg-gray-500 h-full left-0 w-full">{% background "src/images/Scientific-articles.jpg", "Parallaxed background with EVs", "h-full bg-no-repeat bg-cover bg-left bg-fixed mix-blend-multiply" %}</div>

            <!-- Main container -->
            <div id="Container" class="overflow-hidden h-full">
                <!-- Content -->
                <div class="absolute inset-x-0 max-w-5xl mx-auto top-0 flex flex-col h-full w-full">
                    <!-- Text -->
                    <div class="flex flex-col w-full p-4 space-y-2">
                        <h3 class="text-2xl text-center text-white font-semibold font-montserrat">Featured scientific articles</h3>
                        <p class="text-gray-300 font-montserrat text-center max-w-2xl mx-auto">Scientific works within EV research authored or co-autorhed by members of the Danish Society for Extracellular Vesicles.</p>
                    </div>

                    <!-- Article wheel -->
                    {% include "src/_includes/carousel.njk" %}

                    <!-- Buttons -->
                    <div class="text-center p-2">
                        <button class="h-10 px-5 m-2 text-gray-100 transition-colors duration-150 bg-gray-600 rounded-lg focus:shadow-outline hover:bg-gray-800">View more</button>
                        <button class="h-10 px-5 m-2 text-gray-100 transition-colors duration-150 bg-gray-600 rounded-lg focus:shadow-outline hover:bg-gray-800">Submit article</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Spacer -->
    <div class="h-10"></div>
</div>

<!-- New form -->
<div>
    <!-- Hidden part -->
    <form hidden name="mailing-list" data-netlify="true" netlify-honeypot="bot-field">
        <input name="email" />
    </form>

    <!-- Actual form -->
    <form
        method="POST"
        id="mailing-list"
        x-data="{
            loading: false,
            sucess: false,
            email: '',
            emailDirty: false,
        }"
        x-on:submit.prevent="{
            emailDirty = true;
            submitMessage(email);
        }"
    >
        <!-- Design -->
        <div class="flex h-full flex-col justify-between p-2 w-52">
            <!-- Honeypot for bots (is hidden) -->
            <p hidden>
                <label>ignore: <input name="bot-field" /></label>
            </p>

            <!-- Netlify parse (Must be included for netlify to work) -->
            <input type="hidden" name="form-name" value="mailing-list" />

            <!-- Input -->
            <label>Email </label>
            <input class="bg-white focus:outline-none focus:shadow-outline border border-gray-300 py-1.5 px-4 block w-full appearance-none leading-normal" x-model="email" x-on:blur="emailDirty = true" name="email" />

            <!-- Error handling -->
            <div class="text-red-600" x-show.transition="emailDirty && !isEmail(email)" x-cloak>
                <p>Please provide a valid email.</p>
                <svg class="w-6 h-6 text-red-600 fill-current right-5 top-1.5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                    <path d="M11.953,2C6.465,2,2,6.486,2,12s4.486,10,10,10s10-4.486,10-10S17.493,2,11.953,2z M13,17h-2v-2h2V17z M13,13h-2V7h2V13z" />
                </svg>
            </div>

            <!-- Button -->
            <button type="submit" class="h-10 text-sm bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-2 rounded-lg w-1/2" x-bind:disabled="loading">
                <template x-if="!loading">
                    <div>Subscribe</div>
                </template>
                <template x-if="loading">
                    <div>Subscribing...</div>
                </template>
            </button>
        </div>
    </form>
</div>

<!-- Test form -->
<div>
    <!-- Hidden part -->
    <form hidden name="mailing-test" data-netlify="true" netlify-honeypot="bot-field">
        <input name="email" />
    </form>

    <!-- Actual form -->
    <form method="POST" id="mailing-test" x-data="contactForm_new()" @submit.prevent="submitData_new()" x-data="{loading_test: true}" x-on:submit.prevent="submitData()">
        <!-- Design -->
        <div class="flex h-full flex-col justify-between p-2 w-52">
            <!-- Honeypot for bots (is hidden) -->
            <p hidden>
                <label>ignore: <input name="bot-field" /></label>
            </p>

            <!-- Netlify parse (Must be included for netlify to work) -->
            <input type="hidden" name="form-name" value="mailing-test" />

            <!-- Input -->
            <label
                >Email
                <input class="bg-white focus:outline-none focus:shadow-outline border border-gray-300 py-1.5 px-4 block w-full appearance-none leading-normal" name="email" x-model="email" @keydown="{emailValid = false, emailMissing = false}" />
            </label>

            <!-- Error handling -->
            <div class="text-red-600" x-show.transition="emailValid || emailMissing" x-cloak>
                <p x-show="emailValid">Please provide a valid email</p>
                <p x-show="emailMissing">Please provide a email</p>
                <svg class="w-6 h-6 text-red-600 fill-current right-5 top-1.5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                    <path d="M11.953,2C6.465,2,2,6.486,2,12s4.486,10,10,10s10-4.486,10-10S17.493,2,11.953,2z M13,17h-2v-2h2V17z M13,13h-2V7h2V13z" />
                </svg>
            </div>

            <!-- Button (Disabled when loading) -->
            <button type="submit" class="h-10 text-sm bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-2 rounded-lg w-1/2" x-bind:disabled="loading">
                <template x-if="!loading">
                    <p>Subscribe</p>
                </template>

                <!-- Loading - Maybe create round thingy? -->
                <template x-if="loading">
                    <p>Subscribing...</p>
                </template>
            </button>
        </div>
    </form>
</div>

<script type="text/javascript">
    /* Check for valid email */
    function isEmail(value) {
        return new RegExp("^\\S+@\\S+[\\.][0-9a-z]+$").test(String(value).toLowerCase());
    }

    /* Contact form */
    function contactForm_new() {
        return {
            loading: false,
            sucess: false,
            email_submitted: false,
            email: "",
            emailValid: false,
            emailMissing: false,

            submitData_new() {
                /* Set loading loading */
                this.loading = true;
                this.email_submitted = true;

                /* Check if email is valid or not */
                if (this.email == "") {
                    this.emailMissing = true;
                    this.loading = false;
                    return;
                } else if (!isEmail(this.email)) {
                    this.emailValid = true;
                    this.loading = false;
                    return;
                }

                /* Generate formdata element */
                let formElement = document.getElementById("mailing-test");
                let body = new URLSearchParams(new FormData(formElement)).toString();

                /* Submit form */
                return fetch("/", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded",
                    },
                    body: body,
                })
                    .then((response) => {
                        if (response.ok) {
                            formElement.reset();
                            alert("Thank you for your message!");
                        } else {
                            throw new Error(`Something went wrong: ${response.statusText}`);
                        }
                    })
                    .catch((error) => console.error(error));
            },
        };
    }

    /* Handle submission */
    function contactForm_test(email_test) {
        /* Standard x-data definition */
        return {
            loading_test: false,
            sucess_test: false,
            email_submitted_test: false,
            email_test: "",

            submitData() {
                /* Loading */
                this.loading_test = true;
            },
        };
    }

    function submitMessage(email) {
        if (!email || !isEmail) {
            return;
        }
        let formElement = document.getElementById("mailing-list");
        let body = new URLSearchParams(new FormData(formElement)).toString();
        return fetch("/", {
            method: "POST",
            headers: {
                "Content-Type": "application/x-www-form-urlencoded",
            },
            body: body,
        })
            .then((response) => {
                if (response.ok) {
                    formElement.reset();
                    alert("Thank you for your message!");
                } else {
                    throw new Error(`Something went wrong: ${response.statusText}`);
                }
            })
            .catch((error) => console.error(error));
    }
</script>
