<!-- Form -->
<div>
    <!-- Hidden part -->
    <form hidden name="abstract" data-netlify="true" netlify-honeypot="bot-field">
        <input name="name" />
        <input name="email" />
        <input name="abstract_oral" />
        <input name="abstract_poster" />
        <input name="abstract_file" />
    </form>

    <!-- Actual form -->
    <form class="h-full pl-0.5" method="POST" enctype="multipart/form-data" data-netlify="true" id="abstract" x-data="abstractSubmit()" @submit.prevent="submitData()" x-cloak>
        <!-- Setup (Related to netlify) -->
        <div>
            <!-- Honeypot for bots (is hidden) -->
            <p hidden>
                <label>ignore: <input name="bot-field" /></label>
            </p>

            <!-- Netlify parse (Must be included for netlify to work) -->
            <input type="hidden" name="form-name" value="abstract" />
        </div>

        <!-- Form -->
        <div class="p-2 space-y-4" x-show="!sucess">
            <!-- Input form -->
            <div class="flex flex-col space-y-4">
                
                <!-- Identifying information area -->
                <div>
                    <!-- Ã‘ame -->
                    <div class="flex flex-col space-y-1">
                        <!-- Label -->
                        <label for="name" class="block text-md font-medium text-gray-700 font-montserrat"> Name </label>
    
                        <!-- Input -->
                        <div class="">
                            <input id="name" type="text" required class="" name="name" x-model="name" placeholder="Your name" />
                        </div>
                    </div>
    
                    <!-- Email -->
                    <div class="flex flex-col space-y-1">
                        <!-- Label -->
                        <label for="email" class="block text-md font-medium text-gray-700 font-montserrat">Email</label>
    
                        <!-- Input -->
                        <div class="relative">
                            <input id="email" name="email" type="email" autocomplete="email" placeholder="jane@doe.dk" required class="" x-model="email" />
                        </div>
                    </div>
                </div>

                <!-- Abstract area -->
                <div>

                    <!-- Preference -->
                    <div class="flex flex-col space-y-1">
                        <!-- Label -->
                        <div>
                            <!-- Label -->
                            <p class="block text-md font-medium text-gray-700 font-montserrat">Preference for presentation</p>

                            <!-- Radios -->
                            <div class="flex items-center mb-4">
                                <input id="abstract_oral" type="radio" value="" name="abstract_preference" class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600" x-model="oral" form="abstract">
                                <label for="abstract_oral" class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">Oral presentation</label>
                            </div>
                            <div class="flex items-center">
                                <input id="abstract_poster" type="radio" value="" name="abstract_preference" class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600" x-model="poster" form="abstract">
                                <label for="abstract_poster" class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">Poster</label>
                            </div>
                        </div>
                    </div>
                    <!-- 2. Methods and materials -->
                    <div class="flex flex-col space-y-1">
                        <!-- Label -->
                        <label for="abstract_file" class="block text-md font-medium text-gray-700 font-montserrat">Abstract upload</label>

                        <div class="relative">
                            <!-- Text area -->
                            <input id="abstract_file" required class="" name="abstract_file" form="abstract" type="file" x-model="abstract_file"/>
                        </div>
                    </div>
                </div>

            </div>

            <!-- Button -->
            <button type="submit" class="inline-flex justify-center w-full px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-500 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" x-bind:disabled="loading">
                <!-- Active -->
                <template x-if="!loading">
                    <div class="space-x-3 p-1 my-auto justify-between pl-3 pr-3">
                        <p class="text-center self-center">Send message</p>
                    </div>
                </template>

                <!-- Loading - Maybe create round thingy inside box instead? -->
                <template x-if="loading">
                    <div class="flex flex-row space-x-1 justify-center">
                        <p class="self-center">Sending</p>
                        <div class="">
                            <svg class="animate-spin text-gray-100 fill-current h-7 w-7" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path d="M73 50c0-12.7-10.3-23-23-23S27 37.3 27 50m3.9 0c0-10.5 8.5-19.1 19.1-19.1S69.1 39.5 69.1 50" /></svg>
                        </div>
                    </div>
                </template>
            </button>
        </div>

        <!-- Message -->
        <div x-show="sucess" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0 transform scale-90" x-transition:enter-end="opacity-100 transform scale-100" x-transition:leave="transition ease-in duration-300" x-transition:leave-start="opacity-100 transform scale-100" x-transition:leave-end="opacity-0 transform scale-90">
            <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 my-4" role="success">
                <p>Message sent</p>
            </div>
        </div>
    </form>
</div>


<!-- New test -->
<div>
    <!-- Hidden part -->
    <form hidden name="abstractForm" enctype="multipart/form-data" data-netlify="true" netlify-honeypot="bot-field">
        <input name="name" />
        <input name="file" />
    </form>

    <!-- Form -->
    <form name="abstractForm" enctype="multipart/form-data" data-netlify="true" x-data="abstractSubmission()" @submit.prevent="submitData()" x-cloak>
        <!-- Name -->
        <label>
            <span>Name:</span>
            <input name="name" type="text" x-model="name"/>
        </label>

        <!-- File -->
        <label>
            <span>Add file:</span>
            <input name="file" type="file" x-model="file"/>
        </label>

        <!-- Submit -->
        <button type="submit">Submit</button>
    </form>
</div>



<form name="fileForm" enctype="multipart/form-data" data-netlify="true">
    <p>
        <label>
        <span>Name:</span>
        <input name="name" type="text"/>
        </label>
    </p>
    <p>
        <label>
        <span>Add file:</span>
        <input name="file" type="file"/>
        </label>
    </p>
    <button>Submit</button>
</form>
<p class="result"></p>


<script>
    function abstractSubmission() {
        /* Set data */
        return {
            name: "",
            file: "",
        submitAbstract() {
            return fetch("/", {
                body: new FormData(event.target),
            method: "POST",
        })
        }
    };

    function abstractSubmit() {
        /* Set data */
        return {
                loading: false,
                sucess: false,
                email: "",
                name: "",
                abstract_file: "",
                abstract_preference:"",
        submitData() {
            /* Set loading loading */
            this.loading = true;

            /* Generate formdata element */
            let formElement = document.getElementById("abstract");
            let body = new URLSearchParams(new FormData(formElement));

                /* Submit form */
                return fetch("/", {
                    method: "POST",
                    body: body,
                })
                    .then((response) => {
                        if (response.ok) {
                            formElement.reset();
                            /* Show sucess */
                            this.sucess = true;
                        } else {
                            throw new Error(`Something went wrong: ${response.statusText}`);
                        }
                    })
                    .catch((error) => console.error(error));
            },
        };
    }
</script>