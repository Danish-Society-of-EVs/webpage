<div class="h-full">
    <!-- Form -->
    <div class="h-full flex flex-col justify-between">
        <!-- Actual form -->


        
        <form id="my-form" name="Test_2" method="POST" class="w-64 mx-auto" x-data="contactForm()" @submit.prevent="submitData()" data-netlify="true">
            <!-- Container for content -->
            <div class="flex h-full flex-col justify-between">
                <!-- Email input -->
                <div class="relative">
                    <div div x-show="!showSuccessMessage">
                        <label for="email" class="mb-1 m-1 block text-gray-700">Email</label>
                        <div class="relative">
                            <!-- Input -->
                            <input id="email" name="Mailing list email" x-model="email" x-on:keydown="delete error" x-bind:class="{ 'border-red-500 text-red-500': error }" class="bg-white focus:outline-none focus:shadow-outline border border-gray-300 py-1.5 px-4 block w-full appearance-none leading-normal" type="text" placeholder="jane@example.com" />

                            <!-- Error checking -->
                            <svg class="w-6 h-6 absolute text-red-600 fill-current right-5 top-1.5" x-show="error" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                                <path d="M11.953,2C6.465,2,2,6.486,2,12s4.486,10,10,10s10-4.486,10-10S17.493,2,11.953,2z M13,17h-2v-2h2V17z M13,13h-2V7h2V13z" />
                            </svg>
                            <span class="text-red-600 mt-1 text-sm block" x-text="error"></span>
                        </div>
                    </div>

                    <!-- Button -->
                    <div x-show="!showSuccessMessage">
                        <button type="submit" class="text-sm bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-2 rounded-lg w-1/2" x-bind:disabled="loading == true">
                            <template x-if="loading == false">
                                <div>Subscribe</div>
                            </template>
                            <template x-if="loading == true">
                                <div>Subscribing...</div>
                            </template>
                        </button>
                    </div>

                    <!-- Success message -->
                    <div x-show="showSuccessMessage" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0 transform scale-90" x-transition:enter-end="opacity-100 transform scale-100" x-transition:leave="transition ease-in duration-300" x-transition:leave-start="opacity-100 transform scale-100" x-transition:leave-end="opacity-0 transform scale-90">
                        <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 my-4" role="success">
                            <p>Thank you for subscribing!</p>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>



<script>
 /* Check for valid email */
 function isEmail(value) {
        return new RegExp("^\\S+@\\S+[\\.][0-9a-z]+$").test(String(value).toLowerCase());
    }

    /* Contact form */
    function contactForm_new() {
        return {
            loading: false,
            sucess: false,
            email: "",
            emailValid: false,
            emailMissing: false,

            submitData_new() {
                /* Set loading loading */
                this.loading = true;

                /* Check if email is valid or not */
                if (this.email == "") {
                    this.emailMissing = true;
                    this.loading = false;
                    return;
                } else if (!isEmail(this.email)) {
                    this.emailValid = true;
                    this.loading = false;
                    return;
                }

                /* Generate formdata element */
                let formElement = document.getElementById("mailing-test");
                let body = new URLSearchParams(new FormData(formElement)).toString();

                /* Submit form */
                return fetch("/", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded",
                    },
                    body: body,
                })
                    .then((response) => {
                        if (response.ok) {
                            formElement.reset();
                            /* Show sucess */
                            this.sucess = true;
                        } else {
                            throw new Error(`Something went wrong: ${response.statusText}`);
                        }
                    })
                    .catch((error) => console.error(error));
            },
        };
    }



    var form = document.getElementById("my-form");

    async function handleSubmit(event) {
        console.log("Inside handle sumbit");
        event.preventDefault();
        var status = document.getElementById("my-form-status");
        var data = new FormData(event.target);
        fetch(event.target.action, {
            method: form.method,
            body: data,
            headers: {
                Accept: "application/json",
            },
        })
            .then((response) => {
                status.innerHTML = "Thanks for your submission!";
                form.reset();
            })
            .catch((error) => {
                status.innerHTML = "Oops! There was a problem submitting your form";
            });
    }

    /* Contact form function */
    function contactForm() {
        return {
            loading: false,
            showAlertMessage: false,
            showSuccessMessage: false,
            name: "",
            email: "",

            error: "",

            submitData() {
                /* Loading */
                this.loading = false;

                /* No email */
                if (this.email == "") {
                    console.log("inside");
                    this.error = "The email field is required";
                    this.loading = false;
                    this.showAlertMessage = true;
                    return;
                }

                /* Regex for email */
                const expression = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                const validEmail = expression.test(String(this.email).toLowerCase());

                console.log(this.email);
                console.log(validEmail);
                console.log(this.email != "" && !validEmail);

                /* Check wrong email */
                if (this.email != "" && !validEmail) {
                    console.log("inside last check");
                    this.error = "Please enter a valid email address";
                    this.loading = false;
                    this.showAlertMessage = true;
                    return;
                } else {
                    /* If valid */
                    this.loading = false;
                    this.showAlertMessage = false;
                    this.error = "";
                    this.showSuccessMessage = true;

                    /* Create form data */
                    var formData = new FormData();
                    formData.append("email", this.email);

                    /* Submit form */
                    fetch("/", {
                        method: "POST",
                        headers: { "Content-Type": "multipart/form-data" },
                        body: new URLSearchParams(formData).toString(),
                    });
                }
            },
        };
    }
</script>
